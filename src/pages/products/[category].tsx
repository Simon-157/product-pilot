import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import { ProductType } from "@/types/product";
import { QueryObserverResult, useQuery } from "react-query";
import fetchProducts from "@/api/fetch-products";
import styles from "./category.module.scss";
import Rankings from "../compare";
import { ItemsProvider, useItemsContext } from "@/contexts/ItemsContext";
import { products } from "@/utils/data/products";
import { useStore } from "zustand";
import { useIsActiveProduct } from "@/store/useActiveProductA";
import ProductCard from "@/components/product-card/ProductCard";

interface ProductProps {}

const Product: React.FC<ProductProps> = () => {
  const { activeProducts } = useIsActiveProduct();
  // const count = useStore((state) => state.activeProducts.length);
  const router = useRouter();
  const { category } = router.query;
  const categoryName = typeof category === "string" ? category : "";
  const { data, isLoading, isError }: QueryObserverResult<ProductType[], unknown> =
    useQuery("products", () => fetchProducts("electronics"));

   console.log("main", activeProducts)
  
  return (
    <>
      <Head>
        <title>Products </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section className="">
        <h1>There are no products in this category</h1>
        {isError && <h2>an error ocurred</h2>}
        {isLoading ? (
          <p>Loading...</p>
        ) : (
          <div className={styles.baseWrapper}>
            {data &&
              data.map((prod) => (
                <div key={prod.id} className={styles.categoryCtrueard}>
                  <ProductCard product={prod} compare={false} />
                </div>
              ))}
          </div>
        )}

        </section>
        <section>
          <ItemsProvider >
            <Rankings active={activeProducts}/>
          </ItemsProvider>
        </section>
      </main>
    </>
  );
};

export default Product;
